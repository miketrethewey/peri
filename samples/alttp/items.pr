items Prize {
  items Crystal {
    Crystal1
    Crystal2
    Crystal3
    Crystal4
    Crystal5 { tag Crystal56 }
    Crystal6 { tag Crystal56 }
    Crystal7
  }
  items Pendant {
    PendantOfCourage "Pendant of Courage" { alias GreenPendant }
    PendantOfWisdom "Pendant of Wisdom" { alias BluePendant }
    PendantOfPower "Pendant of Power" { alias RedPendant }
  }
  items GoalItem "Goal Item" {
    Triforce
    TriforcePiece "Triforce Piece"
    PowerStar "Power Star"
  }
}

items Major {
  items Sword {
    FighterSword "Fighter's Sword" { alias L1Sword }
    MasterSword "Master Sword" { alias [L2Sword, LightSaber "Light Saber"] }
    TemperedSword "Tempered Sword" { alias [L3Sword, BaconSword "Bacon Sword"]; provides MasterSword }
    GoldSword "Gold Sword" { alias [L4Sword, ButterSword "Butter Sword"]; provides TemperedSword }
    ProgressiveSword "Progressive Sword" {
      progressive [FighterSword, MasterSword, TemperedSword, GoldSword]
    }
  }
  items Shield {
    FighterShield "Fighter's Shield" { alias BlueShield "Blue Shield" }
    FireShield "Fire Shield" { alias RedShield "Red Shield" }
    MirrorShield "Mirror Shield" { alias RiotShield "Riot Shield" }
    ProgressiveShield "Progressive Shield" {
      progressive [FighterShield, FireShield, MirrorShield]
    }
  }
  FighterSwordAndShield "Fighter's Sword & Shield" {
    alias L1SwordAndShield
    provides [FighterSword, FighterShield]
  }
  items Armor {
    GreenMail "Green Mail"
    BlueMail "Blue Mail"
    RedMail "Red Mail"
    ProgressiveMail "Progressive Mail" {
      progressive [BlueMail, RedMail]
    }
  }
  items FireSource "Fire Source" {
    Lamp { alias [Lantern, Flashlight] }
    FireRod "Fire Rod" { alias RageRod "Rage Rod" }
  }
  IceRod "Ice Rod" { alias NiceRod "Nice Rod" }
  Hookshot
  Bow
  items EquippableArrows "Equippable Arrows" { WoodenArrows "Wooden Arrows" alias [WoodArrows "Wood Arrows"]; SilverArrows "Silver Arrows" alias Silvers }
  BowWithArrows "Bow with Arrows" { provides [Bow, WoodenArrows] }
  BowWithSilverArrows "Bow with Silver Arrows" { provides [Bow, SilverArrows] }
  Hammer
  Mushroom
  MagicPowder "Magic Powder" { alias Powder }
  Shovel
  Flute { alias [Floot, Ocarina, SwagDuck] }
  Cape { val InvincibilityCost = 2 }
  CaneOfByrna "Cane of Byrna" { val InvincibilityCost = 1; alias [CaneOfBryan "Cane of Bryan", BlueCane "Blue Cane", Bryan] }
  CaneOfSomaria "Cane of Somaria" { alias [RedCane "Red Cane", Kane] }
  items Glove {
    PowerGlove "Power Glove"
    TitansMitts "Titan's Mitts" { alias Mitts }
    ProgressiveGlove "Progressive Glove" {
      progressive [PowerGlove, TitansMitts]
    }
  }
  MoonPearl "Moon Pearl" { alias Pearl }
  PegasusBoots "Pegasus Boots" { alias Boots }
  BookOfMudora "Book of Mudora" { alias [Book, Literacy] }
  Flippers
  HeartContainer "Heart Container" { max 11 }
  HeartPiece "Heart Piece" { max 24 }
  items Bottle {
    EmptyBottle "Empty Bottle"
    RedBottle "Bottle with red potion"
    GreenBottle "Bottle with green potion"
    BlueBottle "Bottle with blue potion"
    FairyBottle "Bottle with fairy"
    BeeBottle "Bottle with bee"
    GoldBeeBottle "Bottle with golden bee"
    max 4
  }
  items MagicUpgrade "Magic Upgrade" {
    HalfMagic "Half Magic" { val Factor = 2 }
    QuarterMagic "Quarter Magic" { val Factor = 4 }
    ProgressiveMagic "Progressive Magic" {
      progressive [HalfMagic, QuarterMagic]
    }
  }
  items Medallion {
    Bombos
    Ether
    Quake
  }
}

items Minor {
  Net "Bug-Catching Net" { alias BugCatchingNet }
  items Arrows {
    SingleArrow "Single Arrow" { val Num = 1; alias ValidationArrow "Validation Arrow" }
    TenArrows "Ten Arrows" { val Num = 10 }
  }
  items Bombs {
    SingleBomb "Single Bomb" { val Num = 1; alias OneBomb "One Bomb" }
    ThreeBombs "Three Bombs" { val Num = 3 }
  }
  items Boomerang {
    BlueBoomerang "Blue Boomerang" { alias Bluemerang }
    RedBoomerang "Red Boomerang" { alias Redmerang }
  }
  items CapacityUpgrades "Capacity Upgrades" {
    items ArrowCapacity "Arrow Capacity" {
      ArrowsPlusFive "Add 5 arrows to maximum" { val Num = 5; max 6 }
      ArrowsPlusTen "Add 10 arrows to maximum" { val Num = 10; max 1 }
    }
    items BombCapacity "Bomb Capacity" {
      BombsPlusFive "Add 5 bombs to maximum" { val Num = 5; max 6 }
      BombsPlusTen "Add 10 bombs to maximum" { val Num = 10; max 1 }
    }
  }
  items Money {
    GreenRupee "Green Rupee" { val Num = 1 }
    BlueRupee "Blue Rupee" { val Num = 5 }
    RedRupee "Red Rupee" { val Num = 20 }
    FiftyRupess "Fifty Rupees" { val Num = 50 }
    OneHundredRupees "One Hundred Rupees" { val Num = 100 }
    ThreeHundredRupees "Three Hundred Rupees" { val Num = 300 }
  }
}

items Event {
  RescueZelda "Rescue Zelda"
  DefeatAgahnim1 "Defeat Agahnim in Hyrule Castle Tower"
  DefeatAgahnim2 "Defeat Agahnim in Ganon's Tower"
}

fn CanMeltIce = FireRod or CanCast(Bombos)
fn CanCast(medallion) = medallion and (Modes.Swordless or Sword)
fn CanShootSilverArrows = Bow and SilverArrows
fn CanShootArrows = Bow and Arrows
fn CanCutCurtains = Modes.Swordless or Sword
fn BottleCount = min(count(Bottle), 4)
fn MagicBars = max(1, MagicReduction.Factor) * (BottleCount + 1)
fn HasWeaponsFor(n) =
  Sword or Hammer or FireRod or CanShootArrows or RedCane or
  (n * 2 <= sum(Bombs.Num)) or
  (BlueCane and n * 5 <= MagicBars)
fn CanGetGoldBee = Net and Bottle and (CanCast(Quake) or Sword)

enum Boss {
  ArmosKnights "Armos Knights"
  Lanmolas
  Moldorm
  Agahnim1 "Agahnim in Hyrule Castle Tower"
  HelmasaurKing "Helmasaur King"
  Arrghus
  Mothula
  Blind
  Kholdstare
  Vitreous
  Trinexx
  Agahnim2 "Agahnim in Ganon's Tower"
  Ganon
}

fn CanDefeat(boss) = match boss {
  ArmosKnights =>
    Sword or Hammer or CanShootArrows or Bluemerang or Redmerang or
    ((FireRod or IceRod) and MagicBars >= 4) or
    ((RedCane or BlueCane) and MagicBars >= 2)
  Lanmolas =>
    Sword or Hammer or CanShootArrows or FireRod or IceRod or RedCane or
    BlueCane
  Moldorm => Sword or Hammer
  Agahnim => Sword or Hammer or Net
  HelmasaurKing => Sword or Hammer or CanShootArrows
  Arrghus =>
    Hookshot and (Sword or Hammer or (FireRod and MagicBars >= 2) or
      (CanShootArrows and (FireRod or (IceRod and MagicBars >= 2))))
  Mothula =>
    Sword or Hammer or (CanGetGoldBee and Net) or
    (MagicBars >= 2 and (FireRod or IceRod or RedCane)
  Blind => Sword or Hammer or RedCane or BlueCane
  Kholdstare =>
    (CanMeltIce and (Sword or Hammer)) or (FireRod and MagicBars >= 3) or
    (FireRod and CanCast(Bombos) and MagicBars >= 2)
  Vitreous =>
    Sword or Hammer or CanShootArrows
  Trinexx =>
    FireRod and IceRod and (Hammer or L3Sword or
      (L2Sword and MagicBars >= 2) or (L1Sword and MagicBars >= 4))
  Agahnim2 => Sword or Hammer or Net
  Ganon =>
    ((MasterSword or (Modes.Swordless and Hammer)) or
      (SilverArrows or Skills.SilverlessGanon)) and
    (Lamp or (FireRod and
        (MagicBars >= 3 or (TemperedSword and MagicBars >= 2))))
}

